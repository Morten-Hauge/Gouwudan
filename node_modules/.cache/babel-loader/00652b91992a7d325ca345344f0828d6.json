{"remainingRequest":"/Users/mortenhauge/shopping/node_modules/thread-loader/dist/cjs.js!/Users/mortenhauge/shopping/node_modules/babel-loader/lib/index.js!/Users/mortenhauge/shopping/node_modules/eslint-loader/index.js??ref--13-0!/Users/mortenhauge/shopping/src/store.js","dependencies":[{"path":"/Users/mortenhauge/shopping/src/store.js","mtime":1616785776209},{"path":"/Users/mortenhauge/shopping/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mortenhauge/shopping/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mortenhauge/shopping/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mortenhauge/shopping/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.function.name\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport VuexPersist from 'vuex-persist';\nimport dataItems from \"./items.json\"; //import { indexOf } from 'core-js/fn/array'\n// import { indexOf } from 'core-js/fn/array'\n\nVue.use(Vuex); // * Push state to local storage\n\nvar vuexPersist = new VuexPersist({\n  key: 'shopping',\n  storage: window.localStorage\n});\nexport default new Vuex.Store({\n  state: {\n    shoppingList: [],\n    dataItems: dataItems\n  },\n  // * Filter items in shoppingList by zone\n  getters: {\n    zone1Getter: function zone1Getter(state) {\n      return state.shoppingList.filter(function (item) {\n        return item.zone == 1;\n      });\n    },\n    zone2Getter: function zone2Getter(state) {\n      return state.shoppingList.filter(function (item) {\n        return item.zone == 2;\n      });\n    },\n    zone3Getter: function zone3Getter(state) {\n      return state.shoppingList.filter(function (item) {\n        return item.zone == 3;\n      });\n    },\n    zone4Getter: function zone4Getter(state) {\n      return state.shoppingList.filter(function (item) {\n        return item.zone == 4;\n      });\n    }\n  },\n  mutations: {\n    // * Function for adding items from dataItems to shoppingList\n    // addItemToList(state, {item, itemClone}){\n    addItemToList: function addItemToList(state, item) {\n      if (state.shoppingList.some(function (data) {\n        return data.name === item.name;\n      })) {//console.log(\"Finnes allerede\")\n        // return false;\n      } else {\n        //let itemClone = {...item};\n        // state.shoppingList.push(itemClone);\n        state.shoppingList.push(item);\n        var index = state.dataItems.indexOf(item);\n        state.dataItems[index].added = true;\n      }\n    },\n    // test(state, item){\n    //   // state.dataItems = item;\n    //   console.log(state.item)\n    // },\n    // * Remove item from shoppingList\n    removeItemFromList: function removeItemFromList(state, item) {\n      var index = state.shoppingList.indexOf(item);\n\n      function indexDataItems() {\n        var index2 = state.dataItems.find(function (el) {\n          return el.name === item.name;\n        });\n        return state.dataItems.indexOf(index2);\n      }\n\n      state.dataItems[indexDataItems()].added = false;\n      state.dataItems[indexDataItems()].picked = false;\n      state.shoppingList.splice(index, 1);\n    },\n    // * Item put in shopping cart\n    addedToBasket: function addedToBasket(state, item) {\n      var index = state.shoppingList.indexOf(item);\n      state.shoppingList[index].picked = true;\n    },\n    // * Purge shoppingList\n    emptyList: function emptyList(state) {\n      state.shoppingList = []; // * Set picked to false for all items in dataItems\n\n      for (var i = 0; i < state.dataItems.length; i++) {\n        state.dataItems[i].added = false;\n      }\n    }\n  },\n  actions: {},\n  plugins: [vuexPersist.plugin]\n});",{"version":3,"sources":["/Users/mortenhauge/shopping/src/store.js"],"names":["Vue","Vuex","VuexPersist","dataItems","use","vuexPersist","key","storage","window","localStorage","Store","state","shoppingList","getters","zone1Getter","filter","item","zone","zone2Getter","zone3Getter","zone4Getter","mutations","addItemToList","some","data","name","push","index","indexOf","added","removeItemFromList","indexDataItems","index2","find","el","picked","splice","addedToBasket","emptyList","i","length","actions","plugins","plugin"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport VuexPersist from 'vuex-persist'\n\nimport dataItems from './items.json'\n//import { indexOf } from 'core-js/fn/array'\n// import { indexOf } from 'core-js/fn/array'\n\nVue.use(Vuex)\n\n// * Push state to local storage\n\nconst vuexPersist = new VuexPersist({\n  key: 'shopping',\n  storage: window.localStorage\n})\n\nexport default new Vuex.Store({\n  state: {\n    shoppingList: [],\n    dataItems\n  },\n\n  // * Filter items in shoppingList by zone\n  \n  getters: {\n    zone1Getter: state => {\n      return state.shoppingList.filter(\n        item => item.zone == 1\n      );\n    },\n    zone2Getter: state => {\n      return state.shoppingList.filter(\n        item => item.zone == 2\n      );\n    },\n    zone3Getter: state => {\n      return state.shoppingList.filter(\n        item => item.zone == 3\n      );\n    },\n    zone4Getter: state => {\n      return state.shoppingList.filter(\n        item => item.zone == 4\n      );\n    }\n  },\n  mutations: {\n    \n    // * Function for adding items from dataItems to shoppingList\n\n    // addItemToList(state, {item, itemClone}){\n    addItemToList(state, item){\n      if(state.shoppingList.some(data => data.name === item.name)){\n        //console.log(\"Finnes allerede\")\n        // return false;\n      }else{\n        //let itemClone = {...item};\n        // state.shoppingList.push(itemClone);\n        \n        state.shoppingList.push(item);\n        \n        let index = state.dataItems.indexOf(item);\n        state.dataItems[index].added = true;\n      }\n    },\n    // test(state, item){\n    //   // state.dataItems = item;\n    //   console.log(state.item)\n    // },\n\n    // * Remove item from shoppingList\n\n    removeItemFromList(state, item){\n      \n      let index = state.shoppingList.indexOf(item); \n      \n      function indexDataItems(){\n        let index2 = state.dataItems.find(el => el.name === item.name);\n        return state.dataItems.indexOf(index2);\n      }\n\n      state.dataItems[indexDataItems()].added = false;\n      state.dataItems[indexDataItems()].picked = false;\n\n      state.shoppingList.splice(index,1);\n    },\n\n    // * Item put in shopping cart\n\n    addedToBasket(state, item){\n      let index = state.shoppingList.indexOf(item);\n      state.shoppingList[index].picked = true;\n    },\n\n    // * Purge shoppingList\n\n    emptyList(state) {\n      state.shoppingList = [];\n\n      // * Set picked to false for all items in dataItems\n\n      for(let i=0; i < state.dataItems.length; i++){\n        state.dataItems[i].added = false;\n      }\n    }\n  },\n  actions: {\n\n  },\n  plugins: [vuexPersist.plugin]\n})\n"]}]}